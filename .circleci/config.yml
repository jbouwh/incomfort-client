# CircleCI 2.1 configuration file for https://github.com/zxdavb/geniushub-client
# Check https://circleci.com/docs/2.0/language-python/ for more details

version: 2.1


jobs:

  check_lint:
    docker:
      - image: cimg/python:3.9.16
    steps:
      - checkout

      - run:
          command: |
            # pip install -r requirements-dev.txt
            pip install black isort
            mkdir test-results
      - run:
          name: "Check formatting 1: black"
          command: |
            black --diff --check *client.py
            black --diff --check incomfort*
      - run:
          name: "Check formatting 2: isort"
          command: |
            isort --check --diff *client.py
            isort --check --diff incomfort*

      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: artifacts
          # destination: coverage


  test:
    docker:
      - image: cimg/python:3.9.16
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            pip3 install -r requirements.txt
            pip3 install -r requirements-dev.txt
            pip3 install -e .
      - run:
          name: Run pytest
          command: |
            python3 -m pytest tests -v


  deploy:
    docker:
      - image: cimg/python:3.9.16
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            pip3 install twine
      # - run:
      #     name: Verify git tag vs. package version
      #     command: python setup.py verify  # NOTE: $CIRCLE_TAG is not available to su
      - run:
          name: Build the package
          command: |
            python3 setup.py sdist        # create a source distribution
            python3 setup.py bdist_wheel  # create a wheel
      - run:
          name: Create .pypirc
          command: |
            echo -e "[pypi]                                         " >  ~/.pypirc
            echo -e "  username = __token__                         " >> ~/.pypirc
            echo -e "  password = $PYPI_TOKEN                       " >> ~/.pypirc
      # - run:
      #     name: Upload to PyPi
      #     command: twine upload -r pypi dist/*


workflows:
  version: 2

  build_and_deploy:  # will deploy only if the commit has a tag
    jobs:
      - check_lint:
          filters:
            tags:
              only: /.*/
      - test:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - check_lint
            - test
          # filters:
          #   tags:
          #     only: /[0-9]+(\.[0-9]+)*/
          #   branches:
          #     ignore: /.*/
